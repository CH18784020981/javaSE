抽象和方法的区别
1、抽象类和接口都不能直接实例化，如果要实例化，抽象类变量必须指向实现所有抽象方法的子类对象，接口变量必须指向实现所有接口方法的类对象。
2、抽象类要被子类继承，接口要被类实现。
3、接口只能做方法申明，抽象类中可以做方法申明，也可以做方法实现
4、接口里定义的变量只能是公共的静态的常量，抽象类中的变量是普通变量。
5、抽象类里的抽象方法必须全部被子类所实现，如果子类不能全部实现父类抽象方法，那么该子类只能是抽象类。同样，一个实现接口的时候，如不能全部实现接口方法，那么该类也只能为抽象类。
6、抽象方法只能申明，不能实现，接口是设计的结果 ，抽象类是重构的结果
7、抽象类里可以没有抽象方法
8、如果一个类里有抽象方法，那么这个类只能是抽象类
9、抽象方法要被实现，所以不能是静态的，也不能是私有的。
10、接口可继承接口，并可多继承接口，但类只能单根继承。
子类如何访问父类的有参构造?
如果父类有带参构造方法，子类必须重写带参构造方法，调用方法是super（），参数个数和父类一样，并且super必须写在第一句，然后才能实现你的逻辑。连任何定义语句都不行。
final,static关键字的特点
final 修饰类的时候 该类不能被继承
final 修饰成员变量的时候 该成员变量变成常量 并且不能被二次赋值
final 修饰方法的时候可以被继承 不能被重写
final 修饰局部变量的时候:如果是基本数据类型 值不能变 如果是引用数据类型 地址值不能变
final 修饰的变量 初始化时间:

1.static修饰成员变量不属于对象的数据结构；
    2.static修饰的成员变量属于类的范畴，可以直接使用类名引用变量；
    3.static修饰的成员变量和类的信息存储在方法区，无论类创建多少对象，一个类中static修饰的成员变量只有一份

什么是方法的重载?什么是方法的重写？
方法重载:同一个类中,方法名相同,参数（类型或数量）不同,方法体不同;
方法重写:不同的类中,方法名相同,参数（类型和数量）相同,方法体不同；

